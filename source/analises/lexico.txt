7: INT  
7: ID, name = pc_processes 
7: LCOL  
7: NUM, value = 10 
7: RCOL  
7: PV  
8: INT  
8: ID, name = memory_location 
8: LCOL  
8: NUM, value = 10 
8: RCOL  
8: PV  
9: INT  
9: ID, name = init_pc 
9: LCOL  
9: NUM, value = 10 
9: RCOL  
9: PV  
10: INT  
10: ID, name = quantum_value 
10: LCOL  
10: NUM, value = 10 
10: RCOL  
10: PV  
12: INT  
12: ID, name = see_if_ended 
12: LPAR  
12: VOID   
12: RPAR  
12: LCHA  
14: INT  
14: ID, name = i 
14: PV  
15: ID, name = i 
15: ASSIGN  
15: NUM, value = 0 
15: PV  
17: WHILE  
17: LPAR  
17: ID, name = i 
17: LT  
17: NUM, value = 4 
17: RPAR  
17: LCHA  
19: IF  
19: LPAR  
19: ID, name = pc_processes 
19: LCOL  
19: ID, name = i 
19: RCOL  
19: DIF  
19: NUM, value = 0 
19: RPAR  
19: LCHA  
20: RETURN  
20: NUM, value = 0 
20: PV  
21: RCHA  
22: ID, name = i 
22: ASSIGN  
22: ID, name = i 
22: PLUS  
22: NUM, value = 1 
22: PV  
23: RCHA  
25: RETURN  
25: NUM, value = 1 
25: PV  
26: RCHA  
28: VOID   
28: ID, name = main 
28: LPAR  
28: VOID   
28: RPAR  
28: LCHA  
34: INT  
34: ID, name = i 
34: PV  
35: INT  
35: ID, name = preempcao 
35: PV  
36: INT  
36: ID, name = end 
36: PV  
42: ID, name = pc_processes 
42: LCOL  
42: NUM, value = 0 
42: RCOL  
42: ASSIGN  
42: NUM, value = 192 
42: PV  
43: ID, name = pc_processes 
43: LCOL  
43: NUM, value = 1 
43: RCOL  
43: ASSIGN  
43: NUM, value = 211 
43: PV  
44: ID, name = pc_processes 
44: LCOL  
44: NUM, value = 2 
44: RCOL  
44: ASSIGN  
44: NUM, value = 230 
44: PV  
45: ID, name = pc_processes 
45: LCOL  
45: NUM, value = 3 
45: RCOL  
45: ASSIGN  
45: NUM, value = 256 
45: PV  
52: ID, name = memory_location 
52: LCOL  
52: NUM, value = 0 
52: RCOL  
52: ASSIGN  
52: NUM, value = 200 
52: PV  
53: ID, name = memory_location 
53: LCOL  
53: NUM, value = 1 
53: RCOL  
53: ASSIGN  
53: NUM, value = 400 
53: PV  
54: ID, name = memory_location 
54: LCOL  
54: NUM, value = 2 
54: RCOL  
54: ASSIGN  
54: NUM, value = 600 
54: PV  
55: ID, name = memory_location 
55: LCOL  
55: NUM, value = 3 
55: RCOL  
55: ASSIGN  
55: NUM, value = 800 
55: PV  
61: ID, name = init_pc 
61: LCOL  
61: NUM, value = 0 
61: RCOL  
61: ASSIGN  
61: NUM, value = 192 
61: PV  
62: ID, name = init_pc 
62: LCOL  
62: NUM, value = 1 
62: RCOL  
62: ASSIGN  
62: NUM, value = 211 
62: PV  
63: ID, name = init_pc 
63: LCOL  
63: NUM, value = 2 
63: RCOL  
63: ASSIGN  
63: NUM, value = 230 
63: PV  
64: ID, name = init_pc 
64: LCOL  
64: NUM, value = 3 
64: RCOL  
64: ASSIGN  
64: NUM, value = 256 
64: PV  
73: ID, name = preempcao 
73: ASSIGN  
73: ID, name = input 
73: LPAR  
73: RPAR  
73: PV  
75: ID, name = set_quantum_value 
75: LPAR  
75: NUM, value = 10 
75: RPAR  
75: PV  
77: IF  
77: LPAR  
77: ID, name = preempcao 
77: COMP  
77: NUM, value = 0 
77: RPAR  
77: LCHA  
78: ID, name = set_quantum_value 
78: LPAR  
78: NUM, value = 9999 
78: RPAR  
78: PV  
79: RCHA  
81: ID, name = i 
81: ASSIGN  
81: NUM, value = 0 
81: PV  
82: ID, name = end 
82: ASSIGN  
82: NUM, value = 0 
82: PV  
84: WHILE  
84: LPAR  
84: ID, name = end 
84: DIF  
84: NUM, value = 1 
84: RPAR  
84: LCHA  
86: WHILE  
86: LPAR  
86: ID, name = i 
86: LT  
86: NUM, value = 4 
86: RPAR  
86: LCHA  
88: IF  
88: LPAR  
88: ID, name = pc_processes 
88: LCOL  
88: ID, name = i 
88: RCOL  
88: DIF  
88: NUM, value = 0 
88: RPAR  
88: LCHA  
89: ID, name = set_process_bcd 
89: LPAR  
89: ID, name = i 
89: RPAR  
89: PV  
90: ID, name = change_context 
90: LPAR  
90: ID, name = pc_processes 
90: LCOL  
90: ID, name = i 
90: RCOL  
90: VIR  
90: ID, name = memory_location 
90: LCOL  
90: ID, name = i 
90: RCOL  
90: VIR  
90: ID, name = init_pc 
90: LCOL  
90: ID, name = i 
90: RCOL  
90: RPAR  
90: PV  
91: ID, name = pc_processes 
91: LCOL  
91: ID, name = i 
91: RCOL  
91: ASSIGN  
91: ID, name = PC_INTERRUPTION 
91: LPAR  
91: RPAR  
91: PV  
92: RCHA  
93: ID, name = i 
93: ASSIGN  
93: ID, name = i 
93: PLUS  
93: NUM, value = 1 
93: PV  
94: RCHA  
96: ID, name = i 
96: ASSIGN  
96: NUM, value = 0 
96: PV  
97: ID, name = end 
97: ASSIGN  
97: ID, name = see_if_ended 
97: LPAR  
97: RPAR  
97: PV  
98: RCHA  
100: ID, name = output 
100: LPAR  
100: NUM, value = 999 
100: RPAR  
100: PV  
102: RCHA  
